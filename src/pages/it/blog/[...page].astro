---
import { getCollection } from "astro:content";
import Pagination from "@components/blog/pagination.astro";
import Posts from "@components/blog/posts.astro";
import Container from "@components/container.astro";
import Sectionhead from "@components/sectionhead.astro";
import Layout from "@layouts/Layout.astro";
import i18next, { changeLanguage } from "i18next";

changeLanguage("it");

export async function getStaticPaths({ paginate }) {
    changeLanguage("it");
    console.log("Current Language:", i18next.language);

    var posts = await getCollection("blog", ({ data }) => !data.draft);
    console.log("Fetched Posts:", posts);

    var processedPosts = posts.map((post) => {
        const [...slug] = post.slug.split("/");
        let lang = i18next.language;
        var firstSlug = post.slug.match(/^([^\/]*)\//);
        if (firstSlug) {
            lang = firstSlug[1];
        }
        return {
            ...post,
            slug: slug.join("/"),
            lang: lang,
        };
    });
    console.log("Processed Posts:", processedPosts);

    const localizedPosts = processedPosts.filter(
        (post) => post.lang === i18next.language,
    );
    console.log("Localized Posts:", localizedPosts);

    localizedPosts.sort(
        (a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf(),
    );
    return paginate(localizedPosts, {
        params: { blog: "blog" || undefined },
        pageSize: 4,
    });
}
---

<Layout>
    <Container>
        <Sectionhead title="Blog" />
        <Posts posts={page.data} />
        <Pagination page={page} />
    </Container>
</Layout>